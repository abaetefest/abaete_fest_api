services:
  # PostgreSQL database
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-abaete_fest_api_dev}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Elixir application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "${PORT:-4000}:4000"
    volumes:
      - .:/app
      - mix_deps:/app/deps
      - mix_build:/app/_build
    env_file:
      - .env
    environment:
      - MIX_ENV=${MIX_ENV:-dev}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-abaete_fest_api_dev}
      - PORT=${PORT:-4000}
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/app/entrypoint.sh"]

volumes:
  pg_data:
  mix_deps:
  mix_build:
